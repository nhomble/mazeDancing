#!/usr/bin/env python2

import time
import sys

# ROS specifoc
import rospy
from std_msgs.msg import String

# my modules
from Move_Manager  import *
from Dance import *

def fixed_path(move, speech):
	path = [Direction.LEFT]
	do_dance(path, move)

def detect_path(speech):
	time.sleep(3)
	speech.publish("start interpreting dance")
	path = interpret_dance()
	print(path)
	speech.publish("I interpreted")
	for p in path:
		if p is not None:
			speech.publish(Direction.to_string[p])

# ROS loop
def main(move):
	pub = rospy.Publisher(SPEECH_IO, String)
	# fixed_path(move, pub)
	detect_path(pub)
	time.sleep(2)
	return 

if __name__ == "__main__":
	try:
		rospy.init_node('test_dance')
		move = Move_Manager()
		time.sleep(1)
		sys.exit(main(move))
	except rospy.ROSInterruptException:
		pass
