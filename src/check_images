#!/usr/bin/env python2

import sys

import cv2
import cv2.cv as cv
from cv_bridge import CvBridge, CvBridgeError
import roslib; roslib.load_manifest('dfDrone')
import rospy
import SimpleCV
import numpy as np
from sensor_msgs.msg import Image

from Sensor_Manager import *

def main(argv=None):
	if argv is None:
		argv = sys.argv

	rospy.init_node('check_images')
	pcl()
	while not rospy.is_shutdown():
		rospy.Rate(1).sleep()

def color():
	sub = rospy.Subscriber('/camera/rgb/image_color', Image, process_color)

def depth():
	sub = rospy.Subscriber('/camera/depth/image', Image, process_depth)

def process_color(image):
	b = CvBridge()
	colorFrame = b.imgmsg_to_cv(image, "bgr8")
	color = SimpleCV.Image(colorFrame, cv2image=True)
	color.show()

def process_depth(image):
	b = CvBridge()
	frame = b.imgmsg_to_cv2(image, '8UC1')
	s = 0
	for row in frame:
		s += sum(row)
	avg = s / (len(frame) * len(frame[0]))
	return avg

if __name__ == "__main__":
	sys.exit(main())
